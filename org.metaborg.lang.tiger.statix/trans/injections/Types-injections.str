module injections/Types-injections

imports
  signatures/Types-sig
  pp/Types-pp
  libspoofax/term/origin


imports
  injections/Base-injections


signature
  constructors
    TypeDec-Plhdr : TypeDec


rules

  is-Tiger-Dec-or-inj =
    ?TypeDecs(_)

  is-Tiger-TypeDec-or-inj =
    ?TypeDec(_, _)

  is-Tiger-Type-or-inj =
    ?Tid(_)


rules

  is-Tiger-inj-cons =
    is-Tiger-TypeDec-inj-cons

  is-Tiger-TypeDec-inj-cons =
    fail


rules

  explicate-injections-Tiger =
    explicate-injections-Tiger-TypeDec

  explicate-injections-Tiger-Dec =
    origin-track-forced(
      \ TypeDecs(typeDecs){anno*} -> TypeDecs(typeDecs'){anno*}
        with typeDecs' := <map(explicate-injections-Tiger-TypeDec)> typeDecs \
    )

  explicate-injections-Tiger-TypeDec =
    origin-track-forced(
      \ TypeDec(id_, type){anno*} -> TypeDec(id_', type'){anno*}
        with id_' := <explicate-injections-Tiger-ID> id_
             ; type' := <explicate-injections-Tiger-Type> type \
    )

  explicate-injections-Tiger-Type =
    origin-track-forced(
      \ Tid(id_){anno*} -> Tid(id_'){anno*}
        with id_' := <explicate-injections-Tiger-ID> id_ \
    )

  explicate-injections-Tiger-TypeDec =
    origin-track-forced(
      \ TypeDec-Plhdr(){anno*} -> TypeDec-Plhdr(){anno*} \
    )

  explicate-injections-Tiger-TypeDec =
    origin-track-forced(
      \ amb(alts){anno*} -> amb(alts'){anno*}
        with alts' := <map(explicate-injections-Tiger-TypeDec)> alts \
    )


rules

  implicate-injections-Tiger =
    implicate-injections-Tiger-TypeDec

  implicate-injections-Tiger-Dec =
    origin-track-forced(
      \ TypeDecs(typeDecs){anno*} -> TypeDecs(typeDecs'){anno*}
        with typeDecs' := <map(implicate-injections-Tiger-TypeDec)> typeDecs \
    )

  implicate-injections-Tiger-TypeDec =
    origin-track-forced(
      \ TypeDec(id_, type){anno*} -> TypeDec(id_', type'){anno*}
        with id_' := <implicate-injections-Tiger-ID> id_
             ; type' := <implicate-injections-Tiger-Type> type \
    )

  implicate-injections-Tiger-Type =
    origin-track-forced(
      \ Tid(id_){anno*} -> Tid(id_'){anno*}
        with id_' := <implicate-injections-Tiger-ID> id_ \
    )

  implicate-injections-Tiger-TypeDec =
    origin-track-forced(
      \ TypeDec-Plhdr(){anno*} -> TypeDec-Plhdr(){anno*} \
    )

  implicate-injections-Tiger-TypeDec =
    origin-track-forced(
      \ amb(alts){anno*} -> amb(alts'){anno*}
        with alts' := <map(implicate-injections-Tiger-TypeDec)> alts \
    )


rules

  upgrade-placeholders-Tiger =
    upgrade-placeholders-Tiger-TypeDec

  upgrade-placeholders-Tiger-Dec =
    origin-track-forced(
      \ TypeDecs(typeDecs){anno*} -> TypeDecs(typeDecs'){anno*}
        with typeDecs' := <upgrade-list(upgrade-placeholders-Tiger-TypeDec)> typeDecs \
    )

  upgrade-placeholders-Tiger-TypeDec =
    origin-track-forced(
      \ TypeDec(id_, type){anno*} -> TypeDec(id_', type'){anno*}
        with id_' := <upgrade-placeholders-Tiger-ID> id_
             ; type' := <upgrade-placeholders-Tiger-Type> type \
    )

  upgrade-placeholders-Tiger-Type =
    origin-track-forced(
      \ Tid(id_){anno*} -> Tid(id_'){anno*}
        with id_' := <upgrade-placeholders-Tiger-ID> id_ \
    )

  upgrade-placeholders-Tiger-TypeDec =
    origin-track-forced(
      \ TypeDec-Plhdr(){anno*} -> p{anno*}
        with p := <make-placeholder> "TypeDec" \
    )

  upgrade-placeholders-Tiger-TypeDec =
    origin-track-forced(
      \ amb(alts){anno*} -> amb(alts'){anno*}
        with alts' := <upgrade-list(upgrade-placeholders-Tiger-TypeDec)> alts \
    )


rules

  downgrade-placeholders-Tiger =
    downgrade-placeholders-Tiger-TypeDec

  downgrade-placeholders-Tiger-Dec =
    origin-track-forced(
      \ TypeDecs(typeDecs){anno*} -> TypeDecs(typeDecs'){anno*}
        with typeDecs' := <downgrade-list(downgrade-placeholders-Tiger-TypeDec)> typeDecs \
    )

  downgrade-placeholders-Tiger-TypeDec =
    origin-track-forced(
      \ TypeDec(id_, type){anno*} -> TypeDec(id_', type'){anno*}
        with id_' := <downgrade-placeholders-Tiger-ID> id_
             ; type' := <downgrade-placeholders-Tiger-Type> type \
    )

  downgrade-placeholders-Tiger-Type =
    origin-track-forced(
      \ Tid(id_){anno*} -> Tid(id_'){anno*}
        with id_' := <downgrade-placeholders-Tiger-ID> id_ \
    )

  downgrade-placeholders-Tiger-TypeDec =
    origin-track-forced(
      \ p{anno*} -> TypeDec-Plhdr(){anno*}
        where <(is-placeholder + ?TypeDec-Plhdr())> p \
    )

  downgrade-placeholders-Tiger-TypeDec =
    origin-track-forced(
      \ amb(alts){anno*} -> amb(alts'){anno*}
        with alts' := <downgrade-list(downgrade-placeholders-Tiger-TypeDec)> alts \
    )


rules

  explicate-option(s) =
    origin-track-forced(
      \ None(){anno*} -> []{anno*} \
    )

  explicate-option(s) =
    origin-track-forced(
      \ Some(t){anno*} -> [<s> t]{anno*} \
    )

  implicate-option(s) =
    origin-track-forced(
      \ []{anno*} -> None(){anno*} \
    )

  implicate-option(s) =
    origin-track-forced(
      \ [t]{anno*} -> Some(<s> t){anno*} \
    )

  implicate-option(s) =
    origin-track-forced(
      \ [_, _|_] -> <fatal-err(|"Cannot implicate multi-element list to option.")> \
    )


rules

  upgrade-option(s) =
    origin-track-forced(
      \ None(){anno*} -> []{anno*} \
    )

  upgrade-option(s) =
    origin-track-forced(
      \ Some(t){anno*} -> [<s> t]{anno*} \
    )

  upgrade-list(s) =
    origin-track-forced(
      \ l -> l'
        where <is-list> l
        with l' := <map(s)> l \
    )

  upgrade-list(s) =
    origin-track-forced(
      \ l -> l'
        where <fail> l
        with l' := <make-placeholder> "list" \
    )

  downgrade-option(s) =
    origin-track-forced(
      \ None(){anno*} -> None(){anno*} \
    )

  downgrade-option(s) =
    origin-track-forced(
      \ Some(t){anno*} -> Some(<s> t){anno*} \
    )

  downgrade-list(s) =
    origin-track-forced(
      \ p -> p'
        where <is-placeholder> p
        with p' := [] \
    )

  downgrade-list(s) =
    origin-track-forced(
      \ []{anno*} -> []{anno*} \
    )

  downgrade-list(s) =
    origin-track-forced(
      \ [e|es]{anno*} -> [e'|es']{anno*}
        with e' := <s> e
             ; es' := <downgrade-list(s)> es \
    )