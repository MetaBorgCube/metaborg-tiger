module renaming

imports 
	signatures/-
	nabl2/api
	pp
	libspoofax/stratego/debug

rules // menu action strategies
  rename-action :
    (selected-id, _, ast, path, project-path) -> (filename, result)
    where
    	analysis := <nabl2-get-ast-analysis> ast;
      <not(nabl2-analysis-has-errors)> analysis
    with
      filename := <guarantee-extension(|"refactored.tig")> path
    ; target-dec-occ := <collect-one(get-declaration(|analysis, selected-id)) > ast
    ; target-name := "message"
    ; result := <topdown(try(rename(|analysis, selected-id, target-dec-occ, target-name))); pp-Tiger-string> ast
    
rules //rename    
  rename(|analysis, selected-id, target-dec-occ, target-name): VarDecNoType(name, exp) -> VarDecNoType(target-name, exp)
  	where
  		dec-occ := <nabl2-mk-occurrence(|"Var")> name
  		; <?dec-occ> target-dec-occ
  		
  rename(|analysis, selected-id, target-dec-occ, target-name): VarDec(name, type, exp) -> VarDec(target-name, type, exp)
  	where
  		dec-occ := <nabl2-mk-occurrence(|"Var")> name
  		; <?dec-occ> target-dec-occ
  		
  rename(|analysis, selected-id, target-dec-occ, target-name): Var(name) -> Var(target-name)
	where
		//  TODO comparison doesn't work because of different term indexes	  
		//		<?selected-id> name;
    ref-occ := <nabl2-mk-occurrence(|"Var")> name
		; (dec-occ, _) := <nabl2-get-resolved-name(|analysis)> ref-occ
    ; <?dec-occ> target-dec-occ
    
  rename(|analysis, selected-id, target-dec-occ, target-name): TypeDec(name, type) -> TypeDec(target-name, type)
  	where
  		dec-occ := <nabl2-mk-occurrence(|"Type")> name
  		; <?dec-occ> target-dec-occ
  		
  rename(|analysis, selected-id, target-dec-occ, target-name): Tid(name) -> Tid(target-name)
	where
    ref-occ := <nabl2-mk-occurrence(|"Type")> name
		; (dec-occ, _) := <nabl2-get-resolved-name(|analysis)> ref-occ
    ; <?dec-occ> target-dec-occ

rules //get-declaration  		
  get-declaration(|analysis, selected-id): VarDecNoType(name, exp) -> dec-occ
	where
		<?selected-id> name
		; dec-occ := <nabl2-mk-occurrence(|"Var")> name
		
  get-declaration(|analysis, selected-id): VarDec(name, type, exp) -> dec-occ
	where
		<?selected-id> name
		; dec-occ := <nabl2-mk-occurrence(|"Var")> name
  	
  get-declaration(|analysis, selected-id): node@Var(name) -> dec-occ
	where
		<?selected-id> node
		; ref-occ := <nabl2-mk-occurrence(|"Var")> name
		; (dec-occ, _) := <nabl2-get-resolved-name(|analysis)> ref-occ

	get-declaration(|analysis, selected-id): TypeDec(name, type) -> dec-occ
	where
		<?selected-id> name
		; dec-occ := <nabl2-mk-occurrence(|"Type")> name
		
	get-declaration(|analysis, selected-id): node@Tid(name) -> dec-occ
	where
		<?selected-id> node
		; ref-occ := <nabl2-mk-occurrence(|"Type")> name
		; (dec-occ, _) := <nabl2-get-resolved-name(|analysis)> ref-occ
  		
  		